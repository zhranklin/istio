// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: networking/v1alpha3/gateway_plugin.proto

package v1alpha3

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GatewayPlugin struct {
	Gateway []string `protobuf:"bytes,5,rep,name=gateway,proto3" json:"gateway,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*GatewayPlugin_Route
	//	*GatewayPlugin_Host
	//	*GatewayPlugin_Service
	Condition            isGatewayPlugin_Condition `protobuf_oneof:"condition"`
	Settings             *types.Struct             `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	User                 []string                  `protobuf:"bytes,6,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GatewayPlugin) Reset()         { *m = GatewayPlugin{} }
func (m *GatewayPlugin) String() string { return proto.CompactTextString(m) }
func (*GatewayPlugin) ProtoMessage()    {}
func (*GatewayPlugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde08958efb731f8, []int{0}
}
func (m *GatewayPlugin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GatewayPlugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GatewayPlugin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GatewayPlugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayPlugin.Merge(m, src)
}
func (m *GatewayPlugin) XXX_Size() int {
	return m.Size()
}
func (m *GatewayPlugin) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayPlugin.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayPlugin proto.InternalMessageInfo

type isGatewayPlugin_Condition interface {
	isGatewayPlugin_Condition()
	MarshalTo([]byte) (int, error)
	Size() int
}

type GatewayPlugin_Route struct {
	Route string `protobuf:"bytes,1,opt,name=route,proto3,oneof"`
}
type GatewayPlugin_Host struct {
	Host string `protobuf:"bytes,2,opt,name=host,proto3,oneof"`
}
type GatewayPlugin_Service struct {
	Service string `protobuf:"bytes,3,opt,name=service,proto3,oneof"`
}

func (*GatewayPlugin_Route) isGatewayPlugin_Condition()   {}
func (*GatewayPlugin_Host) isGatewayPlugin_Condition()    {}
func (*GatewayPlugin_Service) isGatewayPlugin_Condition() {}

func (m *GatewayPlugin) GetCondition() isGatewayPlugin_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *GatewayPlugin) GetGateway() []string {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *GatewayPlugin) GetRoute() string {
	if x, ok := m.GetCondition().(*GatewayPlugin_Route); ok {
		return x.Route
	}
	return ""
}

func (m *GatewayPlugin) GetHost() string {
	if x, ok := m.GetCondition().(*GatewayPlugin_Host); ok {
		return x.Host
	}
	return ""
}

func (m *GatewayPlugin) GetService() string {
	if x, ok := m.GetCondition().(*GatewayPlugin_Service); ok {
		return x.Service
	}
	return ""
}

func (m *GatewayPlugin) GetSettings() *types.Struct {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *GatewayPlugin) GetUser() []string {
	if m != nil {
		return m.User
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GatewayPlugin) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GatewayPlugin_OneofMarshaler, _GatewayPlugin_OneofUnmarshaler, _GatewayPlugin_OneofSizer, []interface{}{
		(*GatewayPlugin_Route)(nil),
		(*GatewayPlugin_Host)(nil),
		(*GatewayPlugin_Service)(nil),
	}
}

func _GatewayPlugin_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GatewayPlugin)
	// condition
	switch x := m.Condition.(type) {
	case *GatewayPlugin_Route:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Route)
	case *GatewayPlugin_Host:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Host)
	case *GatewayPlugin_Service:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Service)
	case nil:
	default:
		return fmt.Errorf("GatewayPlugin.Condition has unexpected type %T", x)
	}
	return nil
}

func _GatewayPlugin_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GatewayPlugin)
	switch tag {
	case 1: // condition.route
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &GatewayPlugin_Route{x}
		return true, err
	case 2: // condition.host
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &GatewayPlugin_Host{x}
		return true, err
	case 3: // condition.service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &GatewayPlugin_Service{x}
		return true, err
	default:
		return false, nil
	}
}

func _GatewayPlugin_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GatewayPlugin)
	// condition
	switch x := m.Condition.(type) {
	case *GatewayPlugin_Route:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Route)))
		n += len(x.Route)
	case *GatewayPlugin_Host:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Host)))
		n += len(x.Host)
	case *GatewayPlugin_Service:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Service)))
		n += len(x.Service)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*GatewayPlugin)(nil), "istio.networking.v1alpha3.GatewayPlugin")
}

func init() {
	proto.RegisterFile("networking/v1alpha3/gateway_plugin.proto", fileDescriptor_fde08958efb731f8)
}

var fileDescriptor_fde08958efb731f8 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x31, 0x4d, 0x5b, 0xe2, 0x8a, 0xc5, 0x42, 0x60, 0x2a, 0x14, 0x45, 0x4c, 0x99, 0x6c,
	0x41, 0xde, 0xa0, 0x0b, 0x8c, 0x28, 0x6c, 0x2c, 0x28, 0x0d, 0xc6, 0xb5, 0x88, 0x7c, 0x91, 0x7d,
	0x69, 0xc5, 0x1b, 0xc2, 0xc6, 0x23, 0xa0, 0x3c, 0x09, 0x92, 0x9d, 0xc0, 0xc2, 0xe6, 0xff, 0xfc,
	0xdd, 0xdd, 0xa7, 0xa3, 0x85, 0x55, 0x78, 0x00, 0xf7, 0x66, 0xac, 0x96, 0xfb, 0x9b, 0xba, 0xed,
	0x76, 0x75, 0x29, 0x75, 0x8d, 0xea, 0x50, 0xbf, 0x3f, 0x77, 0x6d, 0xaf, 0x8d, 0x15, 0x9d, 0x03,
	0x04, 0x76, 0x69, 0x3c, 0x1a, 0x10, 0x7f, 0xbc, 0x98, 0xf8, 0xf5, 0x95, 0x06, 0xd0, 0xad, 0x92,
	0x01, 0xdc, 0xf6, 0xaf, 0xd2, 0xa3, 0xeb, 0x1b, 0x8c, 0x8d, 0xd7, 0x9f, 0x84, 0x9e, 0xde, 0xc5,
	0x89, 0x0f, 0x61, 0x20, 0xe3, 0x74, 0x39, 0xae, 0xe0, 0xf3, 0x7c, 0x56, 0xa4, 0xd5, 0x14, 0xd9,
	0x39, 0x9d, 0x3b, 0xe8, 0x51, 0x71, 0x92, 0x93, 0x22, 0xbd, 0x3f, 0xaa, 0x62, 0x64, 0x67, 0x34,
	0xd9, 0x81, 0x47, 0x7e, 0x3c, 0x96, 0x43, 0x62, 0x6b, 0xba, 0xf4, 0xca, 0xed, 0x4d, 0xa3, 0xf8,
	0x6c, 0xfc, 0x98, 0x0a, 0xac, 0xa4, 0x27, 0x5e, 0x21, 0x1a, 0xab, 0x3d, 0x4f, 0x72, 0x52, 0xac,
	0x6e, 0x2f, 0x44, 0xd4, 0x14, 0x93, 0xa6, 0x78, 0x0c, 0x9a, 0xd5, 0x2f, 0xc8, 0x18, 0x4d, 0x7a,
	0xaf, 0x1c, 0x5f, 0x04, 0xab, 0xf0, 0xde, 0xac, 0x68, 0xda, 0x80, 0x7d, 0x31, 0x68, 0xc0, 0x6e,
	0xc4, 0xc7, 0x90, 0x91, 0xaf, 0x21, 0x23, 0xdf, 0x43, 0x46, 0x9e, 0xf2, 0x78, 0x12, 0x03, 0xb2,
	0xee, 0x8c, 0xfc, 0xe7, 0x92, 0xdb, 0x45, 0xd8, 0x55, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xed,
	0x05, 0xbc, 0xf6, 0x67, 0x01, 0x00, 0x00,
}

func (m *GatewayPlugin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GatewayPlugin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Condition != nil {
		nn1, err1 := m.Condition.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += nn1
	}
	if m.Settings != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintGatewayPlugin(dAtA, i, uint64(m.Settings.Size()))
		n2, err2 := m.Settings.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	if len(m.Gateway) > 0 {
		for _, s := range m.Gateway {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.User) > 0 {
		for _, s := range m.User {
			dAtA[i] = 0x32
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GatewayPlugin_Route) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa
	i++
	i = encodeVarintGatewayPlugin(dAtA, i, uint64(len(m.Route)))
	i += copy(dAtA[i:], m.Route)
	return i, nil
}
func (m *GatewayPlugin_Host) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x12
	i++
	i = encodeVarintGatewayPlugin(dAtA, i, uint64(len(m.Host)))
	i += copy(dAtA[i:], m.Host)
	return i, nil
}
func (m *GatewayPlugin_Service) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x1a
	i++
	i = encodeVarintGatewayPlugin(dAtA, i, uint64(len(m.Service)))
	i += copy(dAtA[i:], m.Service)
	return i, nil
}
func encodeVarintGatewayPlugin(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GatewayPlugin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Condition != nil {
		n += m.Condition.Size()
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovGatewayPlugin(uint64(l))
	}
	if len(m.Gateway) > 0 {
		for _, s := range m.Gateway {
			l = len(s)
			n += 1 + l + sovGatewayPlugin(uint64(l))
		}
	}
	if len(m.User) > 0 {
		for _, s := range m.User {
			l = len(s)
			n += 1 + l + sovGatewayPlugin(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GatewayPlugin_Route) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Route)
	n += 1 + l + sovGatewayPlugin(uint64(l))
	return n
}
func (m *GatewayPlugin_Host) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Host)
	n += 1 + l + sovGatewayPlugin(uint64(l))
	return n
}
func (m *GatewayPlugin_Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Service)
	n += 1 + l + sovGatewayPlugin(uint64(l))
	return n
}

func sovGatewayPlugin(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGatewayPlugin(x uint64) (n int) {
	return sovGatewayPlugin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GatewayPlugin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGatewayPlugin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GatewayPlugin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GatewayPlugin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Route", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = &GatewayPlugin_Route{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Host", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = &GatewayPlugin_Host{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = &GatewayPlugin_Service{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &types.Struct{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gateway = append(m.Gateway, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = append(m.User, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGatewayPlugin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGatewayPlugin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGatewayPlugin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGatewayPlugin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGatewayPlugin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGatewayPlugin
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthGatewayPlugin
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGatewayPlugin
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGatewayPlugin(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthGatewayPlugin
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGatewayPlugin = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGatewayPlugin   = fmt.Errorf("proto: integer overflow")
)
