// Code generated by solo-kit. DO NOT EDIT.

package v1

import (
	"fmt"

	"github.com/solo-io/go-utils/hashutils"
	"go.uber.org/zap"
)

type EdsSnapshot struct {
	Upstreams UpstreamList
}

func (s EdsSnapshot) Clone() EdsSnapshot {
	return EdsSnapshot{
		Upstreams: s.Upstreams.Clone(),
	}
}

func (s EdsSnapshot) Hash() uint64 {
	return hashutils.HashAll(
		s.hashUpstreams(),
	)
}

func (s EdsSnapshot) hashUpstreams() uint64 {
	return hashutils.HashAll(s.Upstreams.AsInterfaces()...)
}

func (s EdsSnapshot) HashFields() []zap.Field {
	var fields []zap.Field
	fields = append(fields, zap.Uint64("upstreams", s.hashUpstreams()))

	return append(fields, zap.Uint64("snapshotHash", s.Hash()))
}

type EdsSnapshotStringer struct {
	Version   uint64
	Upstreams []string
}

func (ss EdsSnapshotStringer) String() string {
	s := fmt.Sprintf("EdsSnapshot %v\n", ss.Version)

	s += fmt.Sprintf("  Upstreams %v\n", len(ss.Upstreams))
	for _, name := range ss.Upstreams {
		s += fmt.Sprintf("    %v\n", name)
	}

	return s
}

func (s EdsSnapshot) Stringer() EdsSnapshotStringer {
	return EdsSnapshotStringer{
		Version:   s.Hash(),
		Upstreams: s.Upstreams.NamespacesDotNames(),
	}
}
