// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/load_balancer.proto

package v1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"
	time "time"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// LoadBalancerConfig is the settings for the load balancer used to send request to the Upstream
// endpoints.
type LoadBalancerConfig struct {
	// Configures envoy's panic threshold Percent between 0-100. Once the number of non health hosts
	// reaches this percentage, envoy disregards health information.
	// see more info [here](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/load_balancing/panic_threshold#arch-overview-load-balancing-panic-threshold).
	HealthyPanicThreshold *types.DoubleValue `protobuf:"bytes,1,opt,name=healthy_panic_threshold,json=healthyPanicThreshold,proto3" json:"healthy_panic_threshold,omitempty"`
	// This allows batch updates of endpoints health/weight/metadata that happen during a time window.
	// this help lower cpu usage when endpoint change rate is high. defaults to 1 second.
	// Set to 0 to disable and have changes applied immediately.
	UpdateMergeWindow *time.Duration `protobuf:"bytes,2,opt,name=update_merge_window,json=updateMergeWindow,proto3,stdduration" json:"update_merge_window,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*LoadBalancerConfig_RoundRobin_
	//	*LoadBalancerConfig_LeastRequest_
	//	*LoadBalancerConfig_Random_
	Type                 isLoadBalancerConfig_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LoadBalancerConfig) Reset()         { *m = LoadBalancerConfig{} }
func (m *LoadBalancerConfig) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerConfig) ProtoMessage()    {}
func (*LoadBalancerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa1c019b03e4b0f, []int{0}
}
func (m *LoadBalancerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerConfig.Unmarshal(m, b)
}
func (m *LoadBalancerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerConfig.Marshal(b, m, deterministic)
}
func (m *LoadBalancerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerConfig.Merge(m, src)
}
func (m *LoadBalancerConfig) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerConfig.Size(m)
}
func (m *LoadBalancerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerConfig proto.InternalMessageInfo

type isLoadBalancerConfig_Type interface {
	isLoadBalancerConfig_Type()
	Equal(interface{}) bool
}

type LoadBalancerConfig_RoundRobin_ struct {
	RoundRobin *LoadBalancerConfig_RoundRobin `protobuf:"bytes,3,opt,name=round_robin,json=roundRobin,proto3,oneof"`
}
type LoadBalancerConfig_LeastRequest_ struct {
	LeastRequest *LoadBalancerConfig_LeastRequest `protobuf:"bytes,4,opt,name=least_request,json=leastRequest,proto3,oneof"`
}
type LoadBalancerConfig_Random_ struct {
	Random *LoadBalancerConfig_Random `protobuf:"bytes,5,opt,name=random,proto3,oneof"`
}

func (*LoadBalancerConfig_RoundRobin_) isLoadBalancerConfig_Type()   {}
func (*LoadBalancerConfig_LeastRequest_) isLoadBalancerConfig_Type() {}
func (*LoadBalancerConfig_Random_) isLoadBalancerConfig_Type()       {}

func (m *LoadBalancerConfig) GetType() isLoadBalancerConfig_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *LoadBalancerConfig) GetHealthyPanicThreshold() *types.DoubleValue {
	if m != nil {
		return m.HealthyPanicThreshold
	}
	return nil
}

func (m *LoadBalancerConfig) GetUpdateMergeWindow() *time.Duration {
	if m != nil {
		return m.UpdateMergeWindow
	}
	return nil
}

func (m *LoadBalancerConfig) GetRoundRobin() *LoadBalancerConfig_RoundRobin {
	if x, ok := m.GetType().(*LoadBalancerConfig_RoundRobin_); ok {
		return x.RoundRobin
	}
	return nil
}

func (m *LoadBalancerConfig) GetLeastRequest() *LoadBalancerConfig_LeastRequest {
	if x, ok := m.GetType().(*LoadBalancerConfig_LeastRequest_); ok {
		return x.LeastRequest
	}
	return nil
}

func (m *LoadBalancerConfig) GetRandom() *LoadBalancerConfig_Random {
	if x, ok := m.GetType().(*LoadBalancerConfig_Random_); ok {
		return x.Random
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LoadBalancerConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LoadBalancerConfig_OneofMarshaler, _LoadBalancerConfig_OneofUnmarshaler, _LoadBalancerConfig_OneofSizer, []interface{}{
		(*LoadBalancerConfig_RoundRobin_)(nil),
		(*LoadBalancerConfig_LeastRequest_)(nil),
		(*LoadBalancerConfig_Random_)(nil),
	}
}

func _LoadBalancerConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LoadBalancerConfig)
	// type
	switch x := m.Type.(type) {
	case *LoadBalancerConfig_RoundRobin_:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RoundRobin); err != nil {
			return err
		}
	case *LoadBalancerConfig_LeastRequest_:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeastRequest); err != nil {
			return err
		}
	case *LoadBalancerConfig_Random_:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Random); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LoadBalancerConfig.Type has unexpected type %T", x)
	}
	return nil
}

func _LoadBalancerConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LoadBalancerConfig)
	switch tag {
	case 3: // type.round_robin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoadBalancerConfig_RoundRobin)
		err := b.DecodeMessage(msg)
		m.Type = &LoadBalancerConfig_RoundRobin_{msg}
		return true, err
	case 4: // type.least_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoadBalancerConfig_LeastRequest)
		err := b.DecodeMessage(msg)
		m.Type = &LoadBalancerConfig_LeastRequest_{msg}
		return true, err
	case 5: // type.random
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoadBalancerConfig_Random)
		err := b.DecodeMessage(msg)
		m.Type = &LoadBalancerConfig_Random_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LoadBalancerConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LoadBalancerConfig)
	// type
	switch x := m.Type.(type) {
	case *LoadBalancerConfig_RoundRobin_:
		s := proto.Size(x.RoundRobin)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LoadBalancerConfig_LeastRequest_:
		s := proto.Size(x.LeastRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LoadBalancerConfig_Random_:
		s := proto.Size(x.Random)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LoadBalancerConfig_RoundRobin struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadBalancerConfig_RoundRobin) Reset()         { *m = LoadBalancerConfig_RoundRobin{} }
func (m *LoadBalancerConfig_RoundRobin) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerConfig_RoundRobin) ProtoMessage()    {}
func (*LoadBalancerConfig_RoundRobin) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa1c019b03e4b0f, []int{0, 0}
}
func (m *LoadBalancerConfig_RoundRobin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerConfig_RoundRobin.Unmarshal(m, b)
}
func (m *LoadBalancerConfig_RoundRobin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerConfig_RoundRobin.Marshal(b, m, deterministic)
}
func (m *LoadBalancerConfig_RoundRobin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerConfig_RoundRobin.Merge(m, src)
}
func (m *LoadBalancerConfig_RoundRobin) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerConfig_RoundRobin.Size(m)
}
func (m *LoadBalancerConfig_RoundRobin) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerConfig_RoundRobin.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerConfig_RoundRobin proto.InternalMessageInfo

type LoadBalancerConfig_LeastRequest struct {
	// How many choices to take into account. defaults to 2.
	ChoiceCount          uint32   `protobuf:"varint,1,opt,name=choice_count,json=choiceCount,proto3" json:"choice_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadBalancerConfig_LeastRequest) Reset()         { *m = LoadBalancerConfig_LeastRequest{} }
func (m *LoadBalancerConfig_LeastRequest) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerConfig_LeastRequest) ProtoMessage()    {}
func (*LoadBalancerConfig_LeastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa1c019b03e4b0f, []int{0, 1}
}
func (m *LoadBalancerConfig_LeastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerConfig_LeastRequest.Unmarshal(m, b)
}
func (m *LoadBalancerConfig_LeastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerConfig_LeastRequest.Marshal(b, m, deterministic)
}
func (m *LoadBalancerConfig_LeastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerConfig_LeastRequest.Merge(m, src)
}
func (m *LoadBalancerConfig_LeastRequest) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerConfig_LeastRequest.Size(m)
}
func (m *LoadBalancerConfig_LeastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerConfig_LeastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerConfig_LeastRequest proto.InternalMessageInfo

func (m *LoadBalancerConfig_LeastRequest) GetChoiceCount() uint32 {
	if m != nil {
		return m.ChoiceCount
	}
	return 0
}

type LoadBalancerConfig_Random struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadBalancerConfig_Random) Reset()         { *m = LoadBalancerConfig_Random{} }
func (m *LoadBalancerConfig_Random) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerConfig_Random) ProtoMessage()    {}
func (*LoadBalancerConfig_Random) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa1c019b03e4b0f, []int{0, 2}
}
func (m *LoadBalancerConfig_Random) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerConfig_Random.Unmarshal(m, b)
}
func (m *LoadBalancerConfig_Random) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerConfig_Random.Marshal(b, m, deterministic)
}
func (m *LoadBalancerConfig_Random) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerConfig_Random.Merge(m, src)
}
func (m *LoadBalancerConfig_Random) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerConfig_Random.Size(m)
}
func (m *LoadBalancerConfig_Random) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerConfig_Random.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerConfig_Random proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LoadBalancerConfig)(nil), "gloo.solo.io.LoadBalancerConfig")
	proto.RegisterType((*LoadBalancerConfig_RoundRobin)(nil), "gloo.solo.io.LoadBalancerConfig.RoundRobin")
	proto.RegisterType((*LoadBalancerConfig_LeastRequest)(nil), "gloo.solo.io.LoadBalancerConfig.LeastRequest")
	proto.RegisterType((*LoadBalancerConfig_Random)(nil), "gloo.solo.io.LoadBalancerConfig.Random")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/v1/load_balancer.proto", fileDescriptor_aaa1c019b03e4b0f)
}

var fileDescriptor_aaa1c019b03e4b0f = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x6e, 0xd4, 0x30,
	0x10, 0xc7, 0x77, 0xe9, 0xb2, 0x42, 0xde, 0xf4, 0x40, 0x00, 0x11, 0x22, 0x54, 0x3e, 0x2e, 0x20,
	0xa1, 0x3a, 0x14, 0x24, 0xce, 0x90, 0x72, 0xd8, 0x43, 0xf9, 0x90, 0xb5, 0x02, 0x89, 0x4b, 0xe4,
	0x24, 0x53, 0xc7, 0xe0, 0xf5, 0x18, 0xc7, 0x66, 0xd5, 0x37, 0xe1, 0x11, 0x78, 0x2b, 0x24, 0x5e,
	0x82, 0x2b, 0xb2, 0x93, 0xc2, 0x4a, 0x15, 0xda, 0xde, 0xf2, 0xf7, 0xcc, 0xef, 0x67, 0x3b, 0x1e,
	0xf2, 0x52, 0x48, 0xd7, 0xf9, 0x9a, 0x36, 0xb8, 0x2e, 0x7a, 0x54, 0x78, 0x28, 0xb1, 0x10, 0x0a,
	0xb1, 0x30, 0x16, 0x3f, 0x43, 0xe3, 0xfa, 0x21, 0x71, 0x23, 0x8b, 0x6f, 0x47, 0x85, 0x42, 0xde,
	0x56, 0x35, 0x57, 0x5c, 0x37, 0x60, 0xa9, 0xb1, 0xe8, 0x30, 0x4d, 0x42, 0x03, 0x0d, 0x2c, 0x95,
	0x98, 0xdf, 0x14, 0x28, 0x30, 0x16, 0x8a, 0xf0, 0x35, 0xf4, 0xe4, 0x07, 0x02, 0x51, 0x28, 0x28,
	0x62, 0xaa, 0xfd, 0x69, 0xd1, 0x7a, 0xcb, 0x9d, 0x44, 0xfd, 0xbf, 0xfa, 0xc6, 0x72, 0x63, 0xc0,
	0xf6, 0x43, 0xfd, 0xe1, 0xef, 0x3d, 0x92, 0x9e, 0x20, 0x6f, 0xcb, 0x71, 0xeb, 0x63, 0xd4, 0xa7,
	0x52, 0xa4, 0x2b, 0x72, 0xbb, 0x03, 0xae, 0x5c, 0x77, 0x56, 0x19, 0xae, 0x65, 0x53, 0xb9, 0xce,
	0x42, 0xdf, 0xa1, 0x6a, 0xb3, 0xe9, 0xfd, 0xe9, 0xe3, 0xc5, 0xb3, 0xbb, 0x74, 0x10, 0xd3, 0x73,
	0x31, 0x7d, 0x8d, 0xbe, 0x56, 0xf0, 0x81, 0x2b, 0x0f, 0xec, 0xd6, 0x08, 0xbf, 0x0f, 0xec, 0xea,
	0x1c, 0x4d, 0xdf, 0x91, 0x1b, 0xde, 0xb4, 0xdc, 0x41, 0xb5, 0x06, 0x2b, 0xa0, 0xda, 0x48, 0xdd,
	0xe2, 0x26, 0xbb, 0x12, 0x8d, 0x77, 0x2e, 0x1a, 0xc7, 0xab, 0x94, 0xb3, 0xef, 0x3f, 0xef, 0x4d,
	0xd9, 0xf5, 0x81, 0x7d, 0x13, 0xd0, 0x8f, 0x91, 0x4c, 0xdf, 0x92, 0x85, 0x45, 0xaf, 0xdb, 0xca,
	0x62, 0x2d, 0x75, 0xb6, 0x17, 0x45, 0x4f, 0xe8, 0xf6, 0x7f, 0xa3, 0x17, 0x6f, 0x47, 0x59, 0x60,
	0x58, 0x40, 0x96, 0x13, 0x46, 0xec, 0xdf, 0x94, 0xae, 0xc8, 0xbe, 0x02, 0xde, 0xbb, 0xca, 0xc2,
	0x57, 0x0f, 0xbd, 0xcb, 0x66, 0xd1, 0x78, 0xb8, 0xd3, 0x78, 0x12, 0x28, 0x36, 0x40, 0xcb, 0x09,
	0x4b, 0xd4, 0x56, 0x4e, 0x5f, 0x91, 0xb9, 0xe5, 0xba, 0xc5, 0x75, 0x76, 0x35, 0xea, 0x1e, 0xed,
	0x3e, 0x60, 0x6c, 0x5f, 0x4e, 0xd8, 0x08, 0xe6, 0x09, 0x21, 0xff, 0x0e, 0x9d, 0x1f, 0x91, 0x64,
	0x7b, 0xc3, 0xf4, 0x01, 0x49, 0x9a, 0x0e, 0x65, 0x03, 0x55, 0x83, 0x5e, 0xbb, 0xf8, 0x44, 0xfb,
	0x6c, 0x31, 0xac, 0x1d, 0x87, 0xa5, 0xfc, 0x1a, 0x99, 0x0f, 0xd2, 0x72, 0x4e, 0x66, 0xee, 0xcc,
	0x40, 0xf9, 0xe2, 0xc7, 0xaf, 0x83, 0xe9, 0xa7, 0xa7, 0x97, 0x9b, 0x52, 0xf3, 0x45, 0x8c, 0x93,
	0x5a, 0xcf, 0xe3, 0xfb, 0x3c, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x54, 0x1e, 0xcd, 0x56, 0xe0,
	0x02, 0x00, 0x00,
}

func (this *LoadBalancerConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig)
	if !ok {
		that2, ok := that.(LoadBalancerConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.HealthyPanicThreshold.Equal(that1.HealthyPanicThreshold) {
		return false
	}
	if this.UpdateMergeWindow != nil && that1.UpdateMergeWindow != nil {
		if *this.UpdateMergeWindow != *that1.UpdateMergeWindow {
			return false
		}
	} else if this.UpdateMergeWindow != nil {
		return false
	} else if that1.UpdateMergeWindow != nil {
		return false
	}
	if that1.Type == nil {
		if this.Type != nil {
			return false
		}
	} else if this.Type == nil {
		return false
	} else if !this.Type.Equal(that1.Type) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_RoundRobin_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_RoundRobin_)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_RoundRobin_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RoundRobin.Equal(that1.RoundRobin) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_LeastRequest_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_LeastRequest_)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_LeastRequest_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LeastRequest.Equal(that1.LeastRequest) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_Random_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_Random_)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_Random_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Random.Equal(that1.Random) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_RoundRobin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_RoundRobin)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_RoundRobin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_LeastRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_LeastRequest)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_LeastRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ChoiceCount != that1.ChoiceCount {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *LoadBalancerConfig_Random) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LoadBalancerConfig_Random)
	if !ok {
		that2, ok := that.(LoadBalancerConfig_Random)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
