// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ip_restriction.proto

package plugin

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package plugin
// A compilation error at this line likely means your copy of the
// proto package plugin
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ListType int32

const (
	ListType_BLACK ListType = 0
	ListType_WHITE ListType = 1
)

var ListType_name = map[int32]string{
	0: "BLACK",
	1: "WHITE",
}

var ListType_value = map[string]int32{
	"BLACK": 0,
	"WHITE": 1,
}

func (x ListType) String() string {
	return proto.EnumName(ListType_name, int32(x))
}

func (ListType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0b41d952386e43e, []int{0}
}

// 实际黑白名单配置，用于virtualhost or route级别
type BlackOrWhiteList struct {
	Type                 ListType `protobuf:"varint,1,opt,name=type,proto3,enum=iprestriction.ListType" json:"type,omitempty"`
	List                 []string `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlackOrWhiteList) Reset()         { *m = BlackOrWhiteList{} }
func (m *BlackOrWhiteList) String() string { return proto.CompactTextString(m) }
func (*BlackOrWhiteList) ProtoMessage()    {}
func (*BlackOrWhiteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0b41d952386e43e, []int{0}
}
func (m *BlackOrWhiteList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlackOrWhiteList.Unmarshal(m, b)
}
func (m *BlackOrWhiteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlackOrWhiteList.Marshal(b, m, deterministic)
}
func (m *BlackOrWhiteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlackOrWhiteList.Merge(m, src)
}
func (m *BlackOrWhiteList) XXX_Size() int {
	return xxx_messageInfo_BlackOrWhiteList.Size(m)
}
func (m *BlackOrWhiteList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlackOrWhiteList.DiscardUnknown(m)
}

var xxx_messageInfo_BlackOrWhiteList proto.InternalMessageInfo

func (m *BlackOrWhiteList) GetType() ListType {
	if m != nil {
		return m.Type
	}
	return ListType_BLACK
}

func (m *BlackOrWhiteList) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

type ListGlobalConfig struct {
	// route粒度黑白名单开关，在http_filters下每个filter的config/typed_config中指定
	UseRouteLevelList bool `protobuf:"varint,1,opt,name=use_route_level_list,json=useRouteLevelList,proto3" json:"use_route_level_list,omitempty"`
	// get downstream ip from src: Direct: remote address;
	// X-Forwarded-For: get ip from X-Forwarded-For header; <other header name>: ...
	IpSourceHeader       string   `protobuf:"bytes,2,opt,name=ip_source_header,json=ipSourceHeader,proto3" json:"ip_source_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGlobalConfig) Reset()         { *m = ListGlobalConfig{} }
func (m *ListGlobalConfig) String() string { return proto.CompactTextString(m) }
func (*ListGlobalConfig) ProtoMessage()    {}
func (*ListGlobalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0b41d952386e43e, []int{1}
}
func (m *ListGlobalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGlobalConfig.Unmarshal(m, b)
}
func (m *ListGlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGlobalConfig.Marshal(b, m, deterministic)
}
func (m *ListGlobalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGlobalConfig.Merge(m, src)
}
func (m *ListGlobalConfig) XXX_Size() int {
	return xxx_messageInfo_ListGlobalConfig.Size(m)
}
func (m *ListGlobalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGlobalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ListGlobalConfig proto.InternalMessageInfo

func (m *ListGlobalConfig) GetUseRouteLevelList() bool {
	if m != nil {
		return m.UseRouteLevelList
	}
	return false
}

func (m *ListGlobalConfig) GetIpSourceHeader() string {
	if m != nil {
		return m.IpSourceHeader
	}
	return ""
}

func init() {
	proto.RegisterEnum("iprestriction.ListType", ListType_name, ListType_value)
	proto.RegisterType((*BlackOrWhiteList)(nil), "iprestriction.BlackOrWhiteList")
	proto.RegisterType((*ListGlobalConfig)(nil), "iprestriction.ListGlobalConfig")
}

func init() { proto.RegisterFile("ip_restriction.proto", fileDescriptor_b0b41d952386e43e) }

var fileDescriptor_b0b41d952386e43e = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x51, 0x4b, 0x03, 0x31,
	0x10, 0x84, 0x3d, 0x5b, 0xa5, 0xb7, 0x60, 0x89, 0xa1, 0xe0, 0x3d, 0x1e, 0x7d, 0x3a, 0x14, 0x4e,
	0xd0, 0x5f, 0x60, 0x8b, 0x58, 0xf1, 0x40, 0x48, 0x0b, 0x7d, 0x0c, 0xd7, 0x73, 0xb5, 0x8b, 0xb1,
	0x09, 0xc9, 0x46, 0xe8, 0xbf, 0x97, 0x04, 0x04, 0x7d, 0x1b, 0x66, 0xbe, 0x61, 0x67, 0x61, 0x46,
	0x4e, 0x7b, 0x0c, 0xec, 0x69, 0x60, 0xb2, 0x87, 0xd6, 0x79, 0xcb, 0x56, 0x5e, 0x90, 0xfb, 0x63,
	0xce, 0xd7, 0x20, 0x16, 0xa6, 0x1f, 0x3e, 0x5f, 0xfd, 0x76, 0x4f, 0x8c, 0x1d, 0x05, 0x96, 0x37,
	0x30, 0xe6, 0xa3, 0xc3, 0xaa, 0xa8, 0x8b, 0x66, 0x7a, 0x77, 0xd5, 0xfe, 0x6b, 0xb4, 0x09, 0xd9,
	0x1c, 0x1d, 0xaa, 0x0c, 0x49, 0x09, 0x63, 0x43, 0x81, 0xab, 0x51, 0x3d, 0x6a, 0x4a, 0x95, 0xf5,
	0xfc, 0x0b, 0x44, 0xa2, 0x9e, 0x8c, 0xdd, 0xf5, 0x66, 0x69, 0x0f, 0xef, 0xf4, 0x21, 0x6f, 0x61,
	0x16, 0x03, 0x6a, 0x6f, 0x23, 0xa3, 0x36, 0xf8, 0x8d, 0x46, 0xe7, 0x5e, 0x3a, 0x32, 0x51, 0x97,
	0x31, 0xa0, 0x4a, 0x51, 0x97, 0x92, 0xbc, 0xa2, 0x01, 0x41, 0x4e, 0x07, 0x1b, 0xfd, 0x80, 0x7a,
	0x8f, 0xfd, 0x1b, 0xfa, 0xea, 0xb4, 0x2e, 0x9a, 0x52, 0x4d, 0xc9, 0xad, 0xb3, 0xbd, 0xca, 0xee,
	0x75, 0x0d, 0x93, 0xdf, 0x51, 0xb2, 0x84, 0xb3, 0x45, 0xf7, 0xb0, 0x7c, 0x11, 0x27, 0x49, 0x6e,
	0x57, 0xcf, 0x9b, 0x47, 0x51, 0xec, 0xce, 0xf3, 0xef, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x9d, 0x3c, 0x8d, 0xda, 0x13, 0x01, 0x00, 0x00,
}
